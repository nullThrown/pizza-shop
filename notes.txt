     

  TODO NOW
      
      
      
  REFACTORING CONSIDERATIONS
     File structure
      *models rename to 'data'
      *constants.js
      *helpers.js
      *createNode.js
      *render.js
      *storage.js
      *eventHandlers.js
      *App.js

      place all storage functions into storage.js
      figure out how LS deals with stringify/parse
      can it only store string objects or regular JS objects
    Business Logic/JS

      General 
        * have clear usage of proper function names/verbs 
        get -- gets data from LS
        set -- sets data into LS
        render -- grabs data from LS and places onto DOM/ usually accompanied by an element creation  
        toggle -- alters between two states of being(i.e hidden/shown, true/false etc.)
        populate -- data is filled into pre-existing fields(i.e radio buttons, summary)
        delete -- removes data from LS
        init -- initiliazes something, usually an object or other data structure necessary to store information 

        *test on all browsers -- desktop and phone

    Future CONSIDERATIONS

        Logic

          *fix isDuplicate fn() on cart object
          *refactor eventlisteners  
            write single function or two separate ones if necessary for size change selectors and count selectors 
            use querySelectorAll to select food item divs and then select elements from within --- 
            not sure why I think this is better, but at one point it struck me to do it this way
            and at the time it appeared to make sense 
            even though now I'm not sure why that would be better. 

          *add hover effect to more info buttons -- to show toppings etc.
        UI
   
          Deals  
        *remove settimeout so that all popups will be displayed for 3 seconds
        *add popup when a item is removed    
        *have deal run function on final price 

