  TODO
    *creation of food items rework
      *break up class CartItem into multiple classes
      - parent class which contains all consistent fields
      - pizza class 
      - side class
      - dessert class 
      - drink class
      *CartItem obj is being created in the menu 
      * create switch case that checks the category of the food item
        - and creates an obj based on its category
        
     JS/LOGIC
      *place all init exports on top of file with listener exports 
      *checkout has buggy behavior -- order is placed happens even addToCartBtn disabled
      *switch toggle to handle
      *normalize all number data 
        - number data is being pull from DOM as a string and needs to be converted into a number
        - in order to run arithmetic ops on these numbers, they must be converted at a certain point
        - normalize this process and remove all the excess parseFloat/Number calls
      
      app.js  
      cart.js
        *break up cartItem into separate classes
      checkout.js
        *handleRemoveCoupon -- instead of creating coupon -- have coupon and cancel btn 
          already placed on DOM and then when coupon code is added/removed, add text content and toggle display 
        *renderCouponCode -- does not need to create coupon code, this instead needs to toggle the coupon code items (span, cancelbtn)

      customPizza.js
          -- recheck this file!!
        *change classes from 'current-order' -> 'custom'. As well as all selectors 
        *change all vars from 'current/currentOrder' -> 'custom'
        *refactor meatsBtn,veggiesBtn, &, cheeseBtn listener logic -- it is way too verbose and ugly
        *handleToppingSelect -- isTopping should be found using 'findIndex' not 'some'
          - if isTopping returns -1, then create new topping
          - else isTopping !== -1, use that index to change the topping side
          - this reduces the need to traverse the topping array twice
        *renderPizzaToppings -- pizza topping should be nodeCreation, use switch case to determine on which side it will be attached 
        *combine all populate functions into one that runs a callback - sorta like an array method lol 
        *deleteToppingFromLS should be placed in storage
        *place uncheckInputs into helper.js file 
      deals.js
        *file looks fine
      helpers.js
        *file looks fine
      menu.js
        *handleAddToCart -- should be broken down into multiple fn(), depending on what type of food item it is
        *change all element variables from being reassigned to values. This is confusing and an unequivocal bad decision
          - this happens in handleSizeSelect & handleCountSelect
      sidebar.js
        * sidebar needs redesign
          - sidebar needs to be two separate overlays 
          - buttons need to be placed on either side of title
          - overlay should envelope the entire page
          - blue BG needs to be changed
          - look up other sidebars and try to find a nice design
      storage.js
        *file looks fine 
      *
      *
      *
      *
       
     
     
     
     
      General 
        *function name conventions
          get -- gets data from LS
          set -- sets data into LS
          delete -- removes data from LS
          render -- grabs data from LS and places onto DOM  
          toggle -- alters between two states of being(i.e hidden/shown, true/false etc.)
          populate -- data is filled into pre-existing fields(i.e radio buttons, summary)
          init -- initiliazes something 
          handle -- fn to be called on triggered event  
        
    Future Considerations
          *create an order placed page and make it look nice 
          *check about para with grammarly
          *add hover effect to more info buttons -- to show toppings etc.
          * isDuplicate fn() that checks if item-to-be-added already exists in cart
   
          ALERT  
           *change alert UI
           *remove settimeout so that all popups will be displayed for 3 seconds
           *add popup when a item is removed    
           *have deal run function on final price 

